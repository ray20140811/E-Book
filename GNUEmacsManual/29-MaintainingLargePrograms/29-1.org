* 29.1 Version Control

A version control system is a program that can record multiple versions of a source file, storing information such as the creation time of each version, who made it, and a description of what was changed.

版本控制系統是一種可以記錄來源檔案的多個版本的程序，儲存每個版本的創建時間、創建者以及更改內容的描述等資訊。

The Emacs version control interface is called VC. VC commands work with several different version control systems; currently, it supports Bazaar, CVS, Git, Mercurial, Monotone, RCS, SRC, SCCS/CSSC, and Subversion. Of these, the GNU project distributes CVS, RCS, and Bazaar.

Emacs 版本控制介面稱為VC。VC 指令可與多種不同的版本控制系統搭配使用；目前，它支援 Bazaar、CVS、Git、Mercurial、Monotone、RCS、SRC、SCCS/CSSC 和 Subversion。其中，GNU 計畫分發了 CVS、RCS 和 Bazaar。

VC is enabled automatically whenever you visit a file governed by a version control system. To disable VC entirely, set the customizable variable vc-handled-backends to nil (see Customizing VC).

每當您存取受版本控制系統控制的檔案時，VC 都會自動啟用。若要完全停用 VC，請將可自訂變數設為vc-handled-backends（nil 請參閱自訂 VC）。

To update the VC state information for the file visited in the current buffer, use the command vc-refresh-state. This command is useful when you perform version control commands outside Emacs (e.g., from the shell prompt), or if you put the buffer’s file under a different version control system, or remove it from version control entirely.

若要更新目前緩衝區中存取的檔案的 VC 狀態信息，請使用命令vc-refresh-state。當您在Emacs 外部執行版本控制命令（例如，從shell 提示字元），或者如果您將緩衝區的檔案置於不同的版本控制系統下，或者將其完全從版本控制中刪除時，此命令非常有用。

VC is also enabled automatically in Dired buffers (see Dired, the Directory Editor) showing directories whose files are controlled by a VCS. All VC commands described in this section can be invoked from any Dired buffer showing a directory with VC-controlled files; any files that are marked in a Dired buffer (see Dired Marks vs. Flags) are considered to belong to the current fileset, and VC commands operate on the files in this fileset. This allows you to construct VC filesets including any files you want, regardless of their VC state. (If no files are marked when a VC command is invoked from a Dired buffer, the file shown on the current line in the buffer is considered the only file in the fileset.)

VC 也會在 Dired 緩衝區中自動啟用（請參閱Dired，目錄編輯器），顯示其檔案由 VCS 控制的目錄。本節中所述的所有 VC 命令都可以從顯示包含 VC 控製檔案的目錄的任何 Dired 緩衝區呼叫；在 Dired 緩衝區中標記的任何檔案（請參閱Dired 標記與標誌）都視為屬於目前檔案集，且 VC 指令對此檔案集中的檔案進行操作。這允許您建立 VC 文件集，包括您想要的任何文件，無論其 VC 狀態如何。（如果從 Dired 緩衝區呼叫 VC 命令時沒有標記任何文件，則緩衝區中目前行顯示的文件被視為文件集中的唯一文件。）

	- Introduction to Version Control 						版本控制簡介
	- Version Control and the Mode Line 					版本控制和模式線
	- Basic Editing under Version Control					版本控制下的基本編輯
	- Features of the Log Entry Buffer						日誌條目緩衝區的特點
	- Registering a File for Version Control			註冊文件進行版本控制
	- Examining And Comparing Old Revisions				檢查和比較舊版本
	- VC Change Log																VC變更日誌
	- Undoing Version Control Actions							撤銷版本控制操作
	- Ignore Version Control Files								忽略版本控製文件
	- VC Directory Mode														VC目錄模式
	- Version Control Branches										版本控制分支
	- Miscellaneous Commands and Features of VC		VC 的各種指令與功能
	- Customizing VC															客製化VC
